// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Kitty Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}
//Config fonts
@mixin font-source-sans($size: false, $colour: false, $weight: false,  $lh: false) {
  font-family: 'Source Sans Pro', Helvetica, Arial, sans-serif;
  @if $size { font-size: $size; }
  @if $colour { color: $colour; }
  @if $weight { font-weight: $weight; }
  @if $lh { line-height: $lh; }
}


//Media queries
@mixin for-small-phone-only {
  @media(max-width: 576px)  { @content; }
}
@mixin for-phone-only {
  @media (min-width: 0px) and (max-width: 678px)  { @content; }
}
@mixin for-tablet-portrait-up {
  @media (min-width: 679px) and (max-width: 899px) { @content; }
}
@mixin for-tablet-landscape-up {
  @media (min-width: 900px) and (max-width: 1199px) { @content; }
}
@mixin for-desktop-up {
  @media (min-width: 1200px) and (max-width: 1799px) { @content; }
}
@mixin for-big-desktop-up {
  @media (min-width: 1800px) { @content; }
}



//Generate a line to separate containers
@mixin generate-line($color, $height, $opacity){
  color: $color;
  height: $height !important;
  opacity: $opacity;
}


//Set the radius of components
@mixin border-radius($pixel...) {
  border-radius: $pixel !important;
}

//Generate shadow for the components
@mixin box-shadow($shadow1, $shadow2:false) {
  $params: $shadow1;
  @if $shadow2
  { $params: $shadow1, $shadow2; }
  -webkit-box-shadow: $params;
  -moz-box-shadow: $params;
  box-shadow: $params;
}

//Generate border
@mixin border($width, $style, $color) {
  border: $width $style $color;
}


@mixin letter-spacing($space){
  letter-spacing: $space;
}

@mixin word-spacing($space, $lineSpace){
  word-spacing: $space;
  line-height: $lineSpace;
}

//!MARGIN AND PADDING
$max: 100;
$offset: 5;
$unit: 'vh'; //@ Unit
@mixin margin-padding-generator($className, $styleName) {
  $i: 0;
  @while $i <= $max {
    #{$className + $i} { 
      #{$styleName}: #{$i + $unit};
    }
    $i: $i + $offset;
  }
}

//!VH AND VW GENERATOR
$max: 100;
$offset: 5;
$imp: "!important";
@mixin vh-vw-generator($className, $styleName, $unit) {
  $i: 0;
  @while $i <= $max {
    #{$className + $i} { 
      #{$styleName}: #{$i + $unit} + $imp;
    }
    $i: $i + $offset;
  }
}